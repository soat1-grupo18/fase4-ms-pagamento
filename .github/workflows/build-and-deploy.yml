name: Build and test

on:
  pull_request:
    branches:
      - 'main'

jobs:
  build-and-test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run docker compose
        run: |
          set -e
          docker compose up -d

      - name: Wait the application becomes ready
        run: |
          set -e

          while ! curl --fail --url http://localhost:8080/actuator/health;
            do echo "Aguardando aplicação ficar online..."; sleep 5;
          done;

      - name: Test - Makes the payment
        id: test-makes-the-payment
        run: |
          set -e

          curl --fail \
            --request POST \
            --url http://localhost:8080/pagamentos \
            --header 'Content-Type: application/json' \
            --data '{ "pedidoId": "00c26960-b995-4978-904f-719a7d533e45", "total": "60.00" }' | tee output.json

      - name: Stop docker compose
        run: |
          docker compose stop

  build-and-deploy:
    name: Deploy
    environment: production
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: |
          docker build -t olegon/soat1-grupo18-api:${{ github.sha }} .

      - name: Push image
        run: |
          docker login -u olegon -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push olegon/soat1-grupo18-api:${{ github.sha }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.3'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name fiap-cluster

      - name: Edit k8s manifests
        working-directory: kubernetes
        run: |
          sed -i 's/image: APPLICATION_IMAGE_HOLDER/image: olegon\/soat1-grupo18-api:${{ github.sha }}/' deployment-api.yaml
          cat deployment-api.yaml

      - name: Apply changes
        run: |
          kubectl apply -f kubernetes
